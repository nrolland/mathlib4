/-
Copyright (c) 2024 Nicolas Rolland. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Nicolas Rolland
-/
import Mathlib.CategoryTheory.Category.Cat
import Mathlib.CategoryTheory.Monoidal.OfChosenFiniteProducts.Basic
import Mathlib.CategoryTheory.Types
import Mathlib.CategoryTheory.Elements
import Mathlib.CategoryTheory.Limits.Types
import Mathlib.CategoryTheory.Monoidal.Category
import Mathlib.CategoryTheory.Monoidal.Types.Basic
import Mathlib.CategoryTheory.Products.Associator
import Mathlib.CategoryTheory.Products.Basic
import Mathlib.CategoryTheory.Products.Bifunctor
import Mathlib.CategoryTheory.Functor.Currying

/-!
# Distributors

Distributors generalize functors like relations generalizes functions

## Notes

## TODO


## references

- Distributor at work
- Les distributeurs

-/

universe v v' v'' v''' u u' u'' u'''
namespace CategoryTheory
set_option linter.longLine false

variable (A: Cat.{v,u}) (B: Cat.{v',u'}) (C: Cat.{v'',u''}) (D: Cat.{v''',u'''})
variable (ฮฑ ฮฒ ฮณ)

abbrev Dist := Dแตแต ร C โฅค Type

variable (P : Dist A B)
variable (F : D ร C โฅค Type)


open MonoidalCategory
open CategoryTheory.Bifunctor

def Prodprod : Type ร Type โฅค Type  := tensor Type
-- CategoryTheory.Bifunctor.map_id_comp (F : C ร D โฅค E) (W : C) (f : X โถ Y) (g : Y โถ Z) : F.map (๐ W, f โซ g) = F.map (๐ W, f) โซ F.map (๐ W, g)

def t : B ร Cแตแต ร A โฅค (B ร Cแตแต) ร A := (prod.inverseAssociator  B Cแตแต A)

def tt :  Bแตแต  ร (B ร (Cแตแต ร A)) โฅค  Bแตแต ร ((B ร Cแตแต) ร A)  := Functor.prod (๐ญ Bแตแต) (t A B C )


def ttas : ๐ญ C = ๐ C := rfl

def O.{vโ, vโ, vโ, uโ, uโ, uโ} {C : Type uโ} [Category.{vโ, uโ} C] {D : Type uโ} [Category.{vโ, uโ} D]
  {E : Type uโ} [Category.{vโ, uโ} E] (F : C ร D โฅค E) := curryObj F

def proasdd (P : Dist A B) (Q: Dist B C) : Cแตแต ร C โฅค Dist A C  :=
  let PtimesQ : ((โB)แตแต ร โB) ร ((โC)แตแต ร โA) โฅค Type :=
    prod.associator _ _ _ โ Functor.prod (๐ญ _)  (prod.inverseAssociator  _ _ _ ) โ
    Functor.prod (๐ญ _) (Prod.swap _ _) โ prod.inverseAssociator _ _ _  โ
    Functor.prod (๐ญ _) (Prod.swap _ _) โ Functor.prod P Q โ MonoidalCategory.tensor Type
  let PtimesQ'  := curryObj PtimesQ

  let hom : (โB)แตแต ร โB โฅค Type v' := CategoryTheory.Functor.hom B

  let p := CategoryTheory.CategoryOfElements.ฯ hom

  let f := p โ PtimesQ'

  sorry




def comp (P : Dist A B) (Q: Dist B C) : Dist A C  := sorry






end CategoryTheory
