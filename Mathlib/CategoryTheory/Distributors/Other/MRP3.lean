import Mathlib.CategoryTheory.Category.Cat
import Mathlib.CategoryTheory.Monoidal.OfChosenFiniteProducts.Basic
import Mathlib.CategoryTheory.Types
import Mathlib.CategoryTheory.Limits.Types
import Mathlib.CategoryTheory.Monoidal.Category
import Mathlib.CategoryTheory.Monoidal.Types.Basic
import Mathlib.CategoryTheory.Products.Associator
import Mathlib.CategoryTheory.Products.Basic
import Mathlib.CategoryTheory.Products.Bifunctor

namespace CategoryTheory


universe v‚ÇÅ v‚ÇÇ v‚ÇÉ u‚ÇÅ u‚ÇÇ

variable (A B C D: Cat)

variable {C : Type u‚ÇÇ} [Category.{u‚ÇÅ} C]

-- variable (A B C D) [Category A] [Category B] [Category C] [Category D]

def t : B √ó C·µí·µñ √ó A ‚•§ (B √ó C·µí·µñ) √ó A := (prod.inverseAssociator  B C·µí·µñ A)

def tt :  B √ó (B √ó (C·µí·µñ √ó A)) ‚•§  B √ó ((B √ó C·µí·µñ) √ó A)  := Functor.prod (ùü≠ B) (prod.inverseAssociator  B C·µí·µñ A)
